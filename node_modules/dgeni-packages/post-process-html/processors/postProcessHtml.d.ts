import { DocCollection, Processor } from 'dgeni';
export declare function postProcessHtml(log: any, createDocMessage: any): PostProcessHtml;
/**
 * @dgProcessor postProcessHtml
 *
 * @description
 * Use the rehype processing engine to manipulate the
 * `renderedContent` HTML via rehype "plugins" that work with HTML ASTs (HASTs).
 * See https://github.com/rehypejs/rehype
 *
 * Each plugin is a factory function that will be called with the "rehype" engine as `this`.
 * The factory should return a "transform" function that takes a HAST and returns a `boolean` or `undefined`.
 * The HAST can be mutated by the "transform" function.
 * If `false` is returned then the processing stops with that plugin.
 *
 */
export declare class PostProcessHtml implements Processor {
    private log;
    private createDocMessage;
    $runAfter: string[];
    $runBefore: string[];
    docTypes: string[];
    plugins: any[];
    constructor(log: any, createDocMessage: any);
    $process(docs: DocCollection): void;
}
