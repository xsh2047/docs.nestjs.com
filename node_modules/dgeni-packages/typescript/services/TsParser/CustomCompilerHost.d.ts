import { CompilerHost, CompilerOptions, ScriptTarget, SourceFile, WriteFileCallback } from 'typescript';
export declare class CustomCompilerHost implements CompilerHost {
    private options;
    private baseDir;
    private extensions;
    private log;
    constructor(options: CompilerOptions, baseDir: string, extensions: string[], log: any);
    getSourceFile(fileName: string, languageVersion: ScriptTarget, onError?: (message: string) => void): SourceFile;
    getDefaultLibFileName(options: CompilerOptions): any;
    writeFile: WriteFileCallback;
    getCurrentDirectory(): string;
    getDirectories(p: string): never[];
    useCaseSensitiveFileNames(): boolean;
    getCanonicalFileName(fileName: string): string;
    getNewLine(): string;
    fileExists(fileName: string): boolean;
    readFile(fileName: string): string;
}
