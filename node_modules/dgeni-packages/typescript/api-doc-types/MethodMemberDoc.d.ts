import { Declaration, Symbol } from 'typescript';
import { Host } from '../services/ts-host/host';
import { ContainerExportDoc } from './ContainerExportDoc';
import { MemberDoc } from './MemberDoc';
import { ParameterContainer } from './ParameterContainer';
import { ParameterDoc } from './ParameterDoc';
export declare class MethodMemberDoc extends MemberDoc implements ParameterContainer {
    overloads: MethodMemberDoc[];
    readonly name: string;
    readonly parameterDocs: ParameterDoc[];
    readonly parameters: string[];
    readonly anchor: string;
    readonly id: string;
    readonly aliases: string[];
    readonly typeParameters: string;
    constructor(host: Host, containerDoc: ContainerExportDoc, symbol: Symbol, declaration: Declaration, overloads?: MethodMemberDoc[]);
    private computeName;
    private computeAnchor;
    private computeAliases;
}
