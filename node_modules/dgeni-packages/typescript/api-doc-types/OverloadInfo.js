"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OverloadInfo = void 0;
const getDeclarationTypeText_1 = require("../services/TsParser/getDeclarationTypeText");
const ApiDoc_1 = require("./ApiDoc");
const ParameterContainer_1 = require("./ParameterContainer");
/**
 * This represents a single overload of an exported function.
 * There will be a FunctionExportDoc that contains these overloads
 */
class OverloadInfo extends ApiDoc_1.BaseApiDoc {
    constructor(functionDoc, declaration) {
        super(functionDoc.host, functionDoc.moduleDoc, functionDoc.symbol, declaration);
        this.functionDoc = functionDoc;
        this.docType = 'function-overload';
        this.parameterDocs = (0, ParameterContainer_1.getParameters)(this);
        this.parameters = this.parameterDocs.map(p => p.paramText);
        this.type = (0, getDeclarationTypeText_1.getDeclarationTypeText)(this.declaration);
        this.containerDoc = this.functionDoc.containerDoc;
        // Give this overload doc a more specific id and aliases than it's container doc
        const paramString = `(${this.parameters.join(', ')})`;
        this.id += paramString;
        this.aliases = this.aliases.map(alias => alias + paramString);
    }
}
exports.OverloadInfo = OverloadInfo;
//# sourceMappingURL=OverloadInfo.js.map