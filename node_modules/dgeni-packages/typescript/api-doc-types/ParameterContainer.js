"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getParameters = void 0;
const nodeToString_1 = require("../services/TsParser/nodeToString");
const ParameterDoc_1 = require("./ParameterDoc");
function getParameters(callableDoc) {
    const declaration = callableDoc.declaration;
    const signature = callableDoc.typeChecker.getSignatureFromDeclaration(declaration);
    if (!signature) {
        const name = declaration.name ? (0, nodeToString_1.nodeToString)(declaration.name) : 'unknown';
        throw new Error(`Invalid call signature for "${name}" in ${declaration.getSourceFile().fileName} at line ${declaration.getStart()}`);
    }
    return signature.getParameters().map(parameter => {
        return new ParameterDoc_1.ParameterDoc(callableDoc, parameter, parameter.valueDeclaration);
    });
}
exports.getParameters = getParameters;
//# sourceMappingURL=ParameterContainer.js.map